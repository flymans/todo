{"version":3,"sources":["components/AddTaskBar/TaskList/index.js","components/AddTaskBar/index.js","components/Header/index.js","App.js","index.js"],"names":["TaskList","list","taskChangeState","deleteTask","status","renderTask","filteredList","map","toDoItem","List","key","id","className","cn","state","onClick","value","htmlFor","Button","circular","floated","icon","filter","item","Error","filterList","AddTaskBar","text","toDoList","handleChange","target","setState","handleSubmit","e","preventDefault","_","uniqueId","updatedList","updatedToDoItem","active","completed","index","indexOf","update","$set","taskFilterAll","taskFilterActive","taskFilterCompleted","lsToDoList","JSON","parse","localStorage","getItem","mappedList","this","setItem","stringify","onSubmit","Group","disabled","Input","type","onChange","action","required","placeholder","length","React","Component","Header","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf9a27f4.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport cn from 'classnames';\r\nimport './styles.css';\r\nimport { Button, List } from 'semantic-ui-react';\r\n\r\n\r\nconst TaskList = ({ list, taskChangeState, deleteTask, status }) => {\r\n  const filterList = (list) => {\r\n    switch (status) {\r\n      case 'all': {\r\n        return renderTask(list);\r\n      }\r\n      case 'active': {\r\n        return renderTask(list.filter(item => item.state === status));\r\n      }\r\n      case 'completed': {\r\n        return renderTask(list.filter(item => item.state === status));\r\n      }\r\n      default: \r\n        throw new Error('Unexpected error');\r\n    }\r\n  }\r\n  const renderTask = (filteredList) => \r\n    filteredList.map(toDoItem => (\r\n      <List key={toDoItem.id}>\r\n        <div className=\"todo-item__container\">\r\n          <div id={`todo-item__${toDoItem.id}`} className={cn({\r\n            'todo-item': true,\r\n            [toDoItem.state]: true,\r\n          })} onClick={taskChangeState(toDoItem)}>{toDoItem.value}</div>\r\n          <label className=\"todo-item__close-button\" htmlFor={`todo-item_${toDoItem.id}`}>\r\n            <Button onClick={deleteTask(toDoItem.id)} circular floated='right' icon='trash' />\r\n          </label>\r\n        </div>\r\n      </List>\r\n    ));\r\n\r\n  return (\r\n    <ul>\r\n      {filterList(list)}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport _ from 'lodash';\r\nimport update from 'immutability-helper';\r\nimport { Input, Button } from 'semantic-ui-react';\r\nimport './styles.css';\r\n\r\nexport default class AddTaskBar extends React.Component {\r\n  state = {\r\n    text: '',\r\n    toDoList: [],\r\n    status: 'all',\r\n  }\r\n\r\n  handleChange = ({ target: { value } }) => {\r\n    this.setState({ text: value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { text, toDoList } = this.state;\r\n    const toDoItem = {id: _.uniqueId(), value: text, state: 'active'}\r\n    const updatedList = [...toDoList, toDoItem];\r\n    this.setState({ text: '', toDoList: updatedList });\r\n  }\r\n\r\n  taskChangeState = (toDoItem) => () => {\r\n    const { toDoList } = this.state;\r\n    const mapping = {\r\n      active: 'completed',\r\n      completed: 'active',\r\n    }\r\n    const updatedToDoItem = { ...toDoItem, state: mapping[toDoItem.state] };\r\n    const index = toDoList.indexOf(toDoItem);\r\n    const updatedList = update(toDoList, { [index]: { $set: { ...updatedToDoItem } } });\r\n    this.setState({ toDoList: updatedList });\r\n  }\r\n  \r\n  deleteTask = (id) => (e) => {\r\n    e.preventDefault();\r\n    const { toDoList } = this.state;\r\n    const updatedList = toDoList.filter(toDoItem => toDoItem.id !== id);\r\n    this.setState({ toDoList: updatedList });\r\n  }\r\n  \r\n  taskFilterAll = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ status: 'all' });\r\n  }\r\n\r\n  taskFilterActive = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ status: 'active' });\r\n  }\r\n\r\n  taskFilterCompleted = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ status: 'completed' });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const lsToDoList = JSON.parse(localStorage.getItem('toDoList')); \r\n    if (lsToDoList) {\r\n      const mappedList = lsToDoList.map(toDoItem => ({...toDoItem, id: _.uniqueId()}));\r\n      this.setState({toDoList: mappedList});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('toDoList', JSON.stringify(this.state.toDoList));\r\n  }\r\n\r\n  render() {\r\n    const { text, toDoList, status } = this.state;\r\n    return (\r\n      <form className=\"taskBar\" onSubmit={this.handleSubmit}>\r\n        <Button.Group className=\"filter-list\">\r\n          <Button\r\n            disabled={status === 'all'}\r\n            onClick={this.taskFilterAll}>All\r\n          </Button>\r\n          <Button\r\n            disabled={status === 'active'}\r\n            onClick={this.taskFilterActive}>Active\r\n          </Button>\r\n          <Button\r\n            disabled={status === 'completed'}\r\n            onClick={this.taskFilterCompleted}>Completed\r\n          </Button>\r\n        </Button.Group>\r\n        <Input\r\n          className=\"taskBar\"\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={this.handleChange}\r\n          action='Add task'\r\n          required\r\n          placeholder=\"Your task...\"\r\n        />\r\n        {toDoList.length > 0 && \r\n        <TaskList\r\n          list={toDoList}\r\n          status={status}\r\n          taskChangeState={this.taskChangeState}\r\n          deleteTask={this.deleteTask}\r\n        /> }\r\n      </form>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\nimport './styles.css';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"main-header\">\r\n          <h1 className=\"main-header__title\">\r\n            <i className=\"list alternate outline icon\"></i>\r\n            Todo App\r\n          </h1>\r\n          <a href=\"https://github.com/flymans\"><i className=\"huge github icon\"></i></a>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport AddTaskBar from './components/AddTaskBar';\nimport Header from './components/Header'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <AddTaskBar />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}