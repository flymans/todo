{"version":3,"sources":["components/AddTaskBar/TaskList/ModalDelete/index.js","components/AddTaskBar/TaskList/index.js","components/Footer/index.js","components/AddTaskBar/index.js","components/Header/index.js","App.js","index.js"],"names":["ModalDelete","deleteTask","itemId","useState","modalOpen","handleModal","handleClose","Modal","trigger","Button","onClick","type","circular","floated","icon","closeIcon","open","onClose","content","Content","Actions","color","inverted","Icon","name","TaskList","list","taskChangeState","className","map","toDoItem","List","key","id","checked","active","onChange","htmlFor","cn","value","Footer","counter","clear","showButton","AddTaskBar","state","text","toDoList","status","handleChange","e","setState","handleSubmit","preventDefault","_","uniqueId","updatedList","filter","item","length","updatedToDoItem","index","indexOf","update","$set","deleteFinishedTasks","taskFilter","filterOption","target","textContent","toLowerCase","filterList","Error","onUnload","localStorage","setItem","JSON","stringify","lsToDoList","parse","getItem","lsStatus","window","addEventListener","this","mappedList","removeEventListener","Group","fluid","disabled","Form","onSubmit","Input","action","required","placeholder","React","Component","Header","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.373bd4b3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Header, Icon, Modal} from 'semantic-ui-react';\r\n\r\nconst ModalDelete = ({deleteTask, itemId}) => {\r\n    const [modalOpen, handleModal] = useState(false);\r\n\r\n    const handleOpen = () => handleModal(true);\r\n    const handleClose = () => handleModal(false);\r\n\r\n    return (\r\n        <Modal\r\n            trigger={\r\n                <Button\r\n                    onClick={handleOpen}\r\n                    type=\"button\"\r\n                    circular\r\n                    floated=\"right\"\r\n                    icon=\"trash\"\r\n                />\r\n            }\r\n            closeIcon\r\n            open={modalOpen}\r\n            onClose={handleClose}\r\n        >\r\n            <Header icon=\"trash\" content=\"Delete task\" />\r\n            <Modal.Content>\r\n                <p>Are you sure you want to delete this item?</p>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={handleClose} color=\"red\" inverted>\r\n                    <Icon name=\"remove\" />\r\n                    No\r\n                </Button>\r\n                <Button color=\"green\" inverted onClick={deleteTask(itemId)}>\r\n                    <Icon name=\"checkmark\" /> Yes\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nModalDelete.propTypes = {\r\n    deleteTask: PropTypes.func.isRequired,\r\n    itemId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ModalDelete;\r\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport {List} from 'semantic-ui-react';\nimport ModalDelete from './ModalDelete';\nimport './styles.css';\n\nconst TaskList = ({list, taskChangeState, deleteTask}) => {\n    const renderTask = filteredList =>\n        filteredList.map(toDoItem => (\n            <List key={toDoItem.id}>\n                <div className=\"todo-item__container\">\n                    <input\n                        type=\"checkbox\"\n                        id={`todo-item__${toDoItem.id}`}\n                        checked={!toDoItem.active}\n                        onChange={taskChangeState(toDoItem)}\n                    />\n                    <label\n                        htmlFor={`todo-item__${toDoItem.id}`}\n                        className={cn({\n                            'todo-toDoItem': true,\n                            active: toDoItem.active\n                        })}\n                    >\n                        {toDoItem.value}\n                    </label>\n                    <ModalDelete deleteTask={deleteTask} itemId={toDoItem.id} />\n                </div>\n            </List>\n        ));\n    return <ul className=\"todo-list\">{renderTask(list)}</ul>;\n};\n\nTaskList.propTypes = {\n    list: PropTypes.arrayOf(PropTypes.object).isRequired,\n    taskChangeState: PropTypes.func.isRequired,\n    deleteTask: PropTypes.func.isRequired\n};\n\nexport default TaskList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button} from 'semantic-ui-react';\nimport './styles.css';\n\nconst Footer = ({counter, clear, showButton}) => (\n    <footer className=\"main-footer\">\n        <span className=\"main-footer__counter\">\n            {counter} task{counter > 1 ? 's' : ''} left\n        </span>\n        {showButton && (\n            <Button className=\"main-footer__clear\" onClick={clear}>\n                Clear finished tasks\n            </Button>\n        )}\n    </footer>\n);\n\nFooter.propTypes = {\n    counter: PropTypes.number.isRequired,\n    clear: PropTypes.func.isRequired,\n    showButton: PropTypes.bool.isRequired\n};\nexport default Footer;\n","import React from 'react';\r\nimport update from 'immutability-helper';\r\nimport _ from 'lodash';\r\nimport {Button, Form} from 'semantic-ui-react';\r\nimport TaskList from './TaskList';\r\nimport Footer from '../Footer';\r\n\r\nimport './styles.css';\r\n\r\nexport default class AddTaskBar extends React.Component {\r\n    state = {\r\n        text: '',\r\n        toDoList: [],\r\n        status: 'all',\r\n        counter: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        const lsToDoList = JSON.parse(localStorage.getItem('toDoList'));\r\n        const lsStatus = localStorage.getItem('status');\r\n        window.addEventListener('beforeunload', this.onUnload);\r\n        if (lsToDoList && lsStatus) {\r\n            const mappedList = lsToDoList.map(toDoItem => ({\r\n                ...toDoItem,\r\n                id: _.uniqueId()\r\n            }));\r\n            const counter = mappedList.filter(toDoItem => toDoItem.active)\r\n                .length;\r\n            this.setState({toDoList: mappedList, status: lsStatus, counter});\r\n        }\r\n        this.setState({status: 'all'});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('beforeunload', this.onUnload);\r\n    }\r\n\r\n    handleChange = (e, {name, value}) => this.setState({[name]: value});\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {text, toDoList} = this.state;\r\n        const toDoItem = {id: _.uniqueId(), value: text, active: true};\r\n        const updatedList = [...toDoList, toDoItem];\r\n        const counter = updatedList.filter(item => item.active).length;\r\n        this.setState({text: '', toDoList: updatedList, counter});\r\n    };\r\n\r\n    taskChangeState = toDoItem => () => {\r\n        const {toDoList} = this.state;\r\n        const updatedToDoItem = {...toDoItem, active: !toDoItem.active};\r\n        const index = toDoList.indexOf(toDoItem);\r\n        const updatedList = update(toDoList, {\r\n            [index]: {$set: {...updatedToDoItem}}\r\n        });\r\n        const counter = updatedList.filter(item => item.active).length;\r\n        this.setState({toDoList: updatedList, counter});\r\n    };\r\n\r\n    deleteTask = id => e => {\r\n        e.preventDefault();\r\n        const {toDoList} = this.state;\r\n        const updatedList = toDoList.filter(toDoItem => toDoItem.id !== id);\r\n        const counter = updatedList.filter(toDoItem => toDoItem.active).length;\r\n        this.setState({toDoList: updatedList, counter});\r\n    };\r\n\r\n    deleteFinishedTasks = () => {\r\n        const {toDoList} = this.state;\r\n        const updatedList = toDoList.filter(toDoItem => toDoItem.active);\r\n        this.setState({toDoList: updatedList});\r\n    };\r\n\r\n    taskFilter = e => {\r\n        e.preventDefault();\r\n        const filterOption = e.target.textContent.toLowerCase();\r\n        this.setState({status: filterOption});\r\n    };\r\n\r\n    filterList = () => {\r\n        const {toDoList, status} = this.state;\r\n        switch (status) {\r\n            case 'all': {\r\n                return toDoList;\r\n            }\r\n            case 'active': {\r\n                return toDoList.filter(toDoItem => toDoItem.active);\r\n            }\r\n            case 'completed': {\r\n                return toDoList.filter(toDoItem => !toDoItem.active);\r\n            }\r\n            default:\r\n                throw new Error('Unexpected error');\r\n        }\r\n    };\r\n\r\n    onUnload = () => {\r\n        const {toDoList, status} = this.state;\r\n        localStorage.setItem(\r\n            'toDoList',\r\n            JSON.stringify(\r\n                toDoList.map(toDoItem => ({\r\n                    value: toDoItem.value,\r\n                    active: toDoItem.active\r\n                }))\r\n            )\r\n        );\r\n        localStorage.setItem('status', status);\r\n    };\r\n\r\n    render() {\r\n        const {text, toDoList, status, counter} = this.state;\r\n        return (\r\n            <div className=\"task-list\">\r\n                <Button.Group fluid className=\"filter-list\">\r\n                    <Button\r\n                        disabled={status === 'all'}\r\n                        onClick={this.taskFilter}\r\n                    >\r\n                        All\r\n                    </Button>\r\n                    <Button\r\n                        disabled={status === 'active'}\r\n                        onClick={this.taskFilter}\r\n                    >\r\n                        Active\r\n                    </Button>\r\n                    <Button\r\n                        disabled={status === 'completed'}\r\n                        onClick={this.taskFilter}\r\n                    >\r\n                        Completed\r\n                    </Button>\r\n                </Button.Group>\r\n                <Form className=\"task-form\" onSubmit={this.handleSubmit}>\r\n                    <Form.Input\r\n                        fluid\r\n                        className=\"task-bar\"\r\n                        name=\"text\"\r\n                        value={text}\r\n                        onChange={this.handleChange}\r\n                        action=\"Add task\"\r\n                        required\r\n                        placeholder=\"Your task...\"\r\n                    />\r\n                    {toDoList.length > 0 && (\r\n                        <TaskList\r\n                            list={this.filterList()}\r\n                            taskChangeState={this.taskChangeState}\r\n                            deleteTask={this.deleteTask}\r\n                        />\r\n                    )}\r\n                </Form>\r\n                {this.filterList().length > 0 && (\r\n                    <Footer\r\n                        clear={this.deleteFinishedTasks}\r\n                        counter={counter}\r\n                        showButton={\r\n                            toDoList.filter(toDoItem => !toDoItem.active)\r\n                                .length > 0\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Header = () => (\r\n    <header className=\"main-header\">\r\n        <h1 className=\"main-header__title\">\r\n            <i className=\"list alternate outline icon\" />\r\n            Todo App\r\n        </h1>\r\n        <div className=\"main-header__logo\">\r\n            <a href=\"https://github.com/flymans\">\r\n                <i className=\"huge github icon\" />\r\n            </a>\r\n        </div>\r\n    </header>\r\n);\r\nexport default Header;\r\n","import React from 'react';\nimport AddTaskBar from './components/AddTaskBar';\nimport Header from './components/Header';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <AddTaskBar />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}